apiVersion: v1
data:
  realm-export.json: |
    [
      {
        "id": "k3s",
        "realm": "k3s",
        "notBefore": 0,
        "defaultSignatureAlgorithm": "RS256",
        "revokeRefreshToken": false,
        "refreshTokenMaxReuse": 0,
        "accessTokenLifespan": 300,
        "accessTokenLifespanForImplicitFlow": 900,
        "ssoSessionIdleTimeout": 1800,
        "ssoSessionMaxLifespan": 36000,
        "ssoSessionIdleTimeoutRememberMe": 0,
        "ssoSessionMaxLifespanRememberMe": 0,
        "offlineSessionIdleTimeout": 2592000,
        "offlineSessionMaxLifespanEnabled": false,
        "offlineSessionMaxLifespan": 5184000,
        "clientSessionIdleTimeout": 0,
        "clientSessionMaxLifespan": 0,
        "clientOfflineSessionIdleTimeout": 0,
        "clientOfflineSessionMaxLifespan": 0,
        "accessCodeLifespan": 60,
        "accessCodeLifespanUserAction": 300,
        "accessCodeLifespanLogin": 1800,
        "actionTokenGeneratedByAdminLifespan": 43200,
        "actionTokenGeneratedByUserLifespan": 300,
        "oauth2DeviceCodeLifespan": 600,
        "oauth2DevicePollingInterval": 5,
        "enabled": true,
        "sslRequired": "external",
        "registrationAllowed": false,
        "registrationEmailAsUsername": false,
        "rememberMe": true,
        "verifyEmail": false,
        "loginWithEmailAllowed": true,
        "duplicateEmailsAllowed": false,
        "resetPasswordAllowed": false,
        "editUsernameAllowed": false,
        "bruteForceProtected": false,
        "permanentLockout": false,
        "maxFailureWaitSeconds": 900,
        "minimumQuickLoginWaitSeconds": 60,
        "waitIncrementSeconds": 60,
        "quickLoginCheckMilliSeconds": 1000,
        "maxDeltaTimeSeconds": 43200,
        "failureFactor": 30,
        "roles": {
          "realm": [
            {
              "id": "7eec3fcf-8cb1-4831-b98f-a5bfb2d088b1",
              "name": "offline_access",
              "description": "${role_offline-access}",
              "composite": false,
              "clientRole": false,
              "containerId": "k3s",
              "attributes": {}
            },
            {
              "id": "a407165f-aa53-43ef-a991-4181135fa784",
              "name": "default-roles-k3s",
              "description": "${role_default-roles}",
              "composite": true,
              "composites": {
                "realm": [
                  "offline_access",
                  "uma_authorization"
                ],
                "client": {
                  "account": [
                    "view-profile",
                    "manage-account"
                  ]
                }
              },
              "clientRole": false,
              "containerId": "k3s",
              "attributes": {}
            },
            {
              "id": "9e6d84b3-4df0-4c5a-be80-557719497279",
              "name": "uma_authorization",
              "description": "${role_uma_authorization}",
              "composite": false,
              "clientRole": false,
              "containerId": "k3s",
              "attributes": {}
            }
          ],
          "client": {
            "realm-management": [
              {
                "id": "ef59e9c9-d6af-42c4-a220-877a4e41c53c",
                "name": "view-realm",
                "description": "${role_view-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "a25c5cd7-3a4b-46af-9521-f032bf259811",
                "name": "query-groups",
                "description": "${role_query-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "1e5d0c53-d05e-4ece-b7a7-b28cbff08748",
                "name": "manage-clients",
                "description": "${role_manage-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "53fd6663-004b-4e5a-b42d-f42f3ad5e2c0",
                "name": "view-users",
                "description": "${role_view-users}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-groups",
                      "query-users"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "79b75df2-34e6-41da-b4c0-e8a1e0dbd635",
                "name": "impersonation",
                "description": "${role_impersonation}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "86ee7f46-2d17-41f1-bc23-0f95179af7bf",
                "name": "manage-realm",
                "description": "${role_manage-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "a37689c3-066b-4626-aa92-24e9db4fdc19",
                "name": "view-clients",
                "description": "${role_view-clients}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "query-clients"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "e4c6c359-3b25-46bc-afd1-1730ae03ab6d",
                "name": "realm-admin",
                "description": "${role_realm-admin}",
                "composite": true,
                "composites": {
                  "client": {
                    "realm-management": [
                      "view-realm",
                      "query-groups",
                      "manage-clients",
                      "view-users",
                      "impersonation",
                      "manage-realm",
                      "view-clients",
                      "view-authorization",
                      "view-events",
                      "query-clients",
                      "create-client",
                      "manage-authorization",
                      "manage-identity-providers",
                      "view-identity-providers",
                      "query-realms",
                      "manage-users",
                      "manage-events",
                      "query-users"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "8fffa382-315b-4d8f-929f-eaadcd692fa2",
                "name": "view-authorization",
                "description": "${role_view-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "f2156acc-bc1a-41fa-9c1e-a6ba16ad2e2f",
                "name": "view-events",
                "description": "${role_view-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "a2fde9cf-5c53-494e-ac43-6f0667cafac8",
                "name": "query-clients",
                "description": "${role_query-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "3a054fd4-66ce-4524-8442-23305a2cc356",
                "name": "create-client",
                "description": "${role_create-client}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "45cb6b00-9448-4cc2-978c-0bec6144d1a4",
                "name": "manage-authorization",
                "description": "${role_manage-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "89818819-ce69-49f6-9cd8-db3e03b62c46",
                "name": "manage-identity-providers",
                "description": "${role_manage-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "4e76ae08-1e2f-438d-b3c7-97c6cc111346",
                "name": "view-identity-providers",
                "description": "${role_view-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "9eb9bdd2-5e0c-489a-b4f7-81c914863c67",
                "name": "manage-users",
                "description": "${role_manage-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "0a28ba0b-352d-4ebf-b232-e7aad9e0b9bd",
                "name": "query-realms",
                "description": "${role_query-realms}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "70025288-7696-49ea-a73d-10bf2861588a",
                "name": "manage-events",
                "description": "${role_manage-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              },
              {
                "id": "9e3946f4-0364-4000-aa6a-2a189beea5cf",
                "name": "query-users",
                "description": "${role_query-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
                "attributes": {}
              }
            ],
            "traefik-forward-auth": [],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
              {
                "id": "b0e1e612-3202-45c0-9598-82c8841a264d",
                "name": "read-token",
                "description": "${role_read-token}",
                "composite": false,
                "clientRole": true,
                "containerId": "6baf8fa7-0a67-475c-812b-a48b01ccf4fa",
                "attributes": {}
              }
            ],
            "account": [
              {
                "id": "6a7da750-a8a4-4f16-bed2-ac5fc78ac26d",
                "name": "view-applications",
                "description": "${role_view-applications}",
                "composite": false,
                "clientRole": true,
                "containerId": "b18f30ae-1c92-4dec-8d10-f6e04a6554bb",
                "attributes": {}
              },
              {
                "id": "50b6fe79-4c44-4dc2-9322-245f43ddf7f2",
                "name": "manage-consent",
                "description": "${role_manage-consent}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "view-consent"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "b18f30ae-1c92-4dec-8d10-f6e04a6554bb",
                "attributes": {}
              },
              {
                "id": "7a642089-cf57-4de9-b00b-c4164fb2ef1f",
                "name": "manage-account",
                "description": "${role_manage-account}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "manage-account-links"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "b18f30ae-1c92-4dec-8d10-f6e04a6554bb",
                "attributes": {}
              },
              {
                "id": "095c630e-ebce-4e5d-ba9e-7ee4a3da7ddd",
                "name": "view-profile",
                "description": "${role_view-profile}",
                "composite": false,
                "clientRole": true,
                "containerId": "b18f30ae-1c92-4dec-8d10-f6e04a6554bb",
                "attributes": {}
              },
              {
                "id": "6d5096f4-2b2e-407d-bc28-e08bdb2acfb9",
                "name": "manage-account-links",
                "description": "${role_manage-account-links}",
                "composite": false,
                "clientRole": true,
                "containerId": "b18f30ae-1c92-4dec-8d10-f6e04a6554bb",
                "attributes": {}
              },
              {
                "id": "f3a73cf8-4aab-4b12-833e-494937858f26",
                "name": "view-consent",
                "description": "${role_view-consent}",
                "composite": false,
                "clientRole": true,
                "containerId": "b18f30ae-1c92-4dec-8d10-f6e04a6554bb",
                "attributes": {}
              },
              {
                "id": "b1d3fb4a-1d4a-42f0-862d-161a67686bc2",
                "name": "delete-account",
                "description": "${role_delete-account}",
                "composite": false,
                "clientRole": true,
                "containerId": "b18f30ae-1c92-4dec-8d10-f6e04a6554bb",
                "attributes": {}
              }
            ]
          }
        },
        "groups": [],
        "defaultRole": {
          "id": "a407165f-aa53-43ef-a991-4181135fa784",
          "name": "default-roles-k3s",
          "description": "${role_default-roles}",
          "composite": true,
          "clientRole": false,
          "containerId": "k3s"
        },
        "requiredCredentials": [
          "password"
        ],
        "otpPolicyType": "totp",
        "otpPolicyAlgorithm": "HmacSHA1",
        "otpPolicyInitialCounter": 0,
        "otpPolicyDigits": 6,
        "otpPolicyLookAheadWindow": 1,
        "otpPolicyPeriod": 30,
        "otpSupportedApplications": [
          "FreeOTP",
          "Google Authenticator"
        ],
        "webAuthnPolicyRpEntityName": "keycloak",
        "webAuthnPolicySignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyRpId": "",
        "webAuthnPolicyAttestationConveyancePreference": "not specified",
        "webAuthnPolicyAuthenticatorAttachment": "not specified",
        "webAuthnPolicyRequireResidentKey": "not specified",
        "webAuthnPolicyUserVerificationRequirement": "not specified",
        "webAuthnPolicyCreateTimeout": 0,
        "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyAcceptableAaguids": [],
        "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
        "webAuthnPolicyPasswordlessSignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyPasswordlessRpId": "",
        "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
        "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
        "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
        "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
        "webAuthnPolicyPasswordlessCreateTimeout": 0,
        "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyPasswordlessAcceptableAaguids": [],
        "users": [
          {
            "id": "29d34b3b-071a-4b9e-a414-cbdfe7e4008f",
            "createdTimestamp": 1655663910335,
            "username": "joern.arne",
            "enabled": true,
            "totp": true,
            "emailVerified": true,
            "firstName": "Jörn Arne",
            "lastName": "Göttig",
            "email": "joern.arne@gmail.com",
            "credentials": [
              {
                "id": "2b9f90ae-8d2f-4a15-aca2-ae82565a53c2",
                "type": "password",
                "createdDate": 1655664126899,
                "secretData": "{\"value\":\"wQRMkP4/Azw6BedCogbVvDRG1n+RWr93fD753aRnydjhDBVz1m65Gbls5q9nWUceqsJwCgFCetvIkqOVCQ9aYA==\",\"salt\":\"OpteOBcXUD237ufOO+WiDQ==\",\"additionalParameters\":{}}",
                "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
              },
              {
                "id": "a2d6f89d-a78e-49e9-9c30-5c4ddd77af51",
                "type": "otp",
                "userLabel": "1password",
                "createdDate": 1655664172031,
                "secretData": "{\"value\":\"VrkDRd67TLz2bL5qFfQx\"}",
                "credentialData": "{\"subType\":\"totp\",\"digits\":6,\"counter\":0,\"period\":30,\"algorithm\":\"HmacSHA1\"}"
              }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "default-roles-k3s"
            ],
            "notBefore": 0,
            "groups": []
          }
        ],
        "scopeMappings": [
          {
            "clientScope": "offline_access",
            "roles": [
              "offline_access"
            ]
          }
        ],
        "clientScopeMappings": {
          "account": [
            {
              "client": "account-console",
              "roles": [
                "manage-account"
              ]
            }
          ]
        },
        "clients": [
          {
            "id": "b18f30ae-1c92-4dec-8d10-f6e04a6554bb",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/k3s/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/k3s/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "7a673bb4-6602-49b4-a916-f516f82496d9",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "ba2d161f-a1dc-419a-8f43-a431febef35d",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/k3s/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/k3s/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "a1f32c13-992a-412a-b51f-bd22fad6a6b6",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {}
              },
              {
                "id": "18001daf-f3e1-4ac3-84d3-b53ce517748e",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "6dcdb972-9d3a-47ab-9840-24bb145b66dc",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "54a626aa-6c3f-4b2f-8d2b-01bbd0d26e6a",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "6baf8fa7-0a67-475c-812b-a48b01ccf4fa",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "01a7139d-c42d-45c0-bfc2-cf4be097c9d4",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "8e4ea161-bd2f-40b4-a622-b3372b0ee522",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "fc074ac7-7bfe-4233-be20-cf49622d1c77",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "3b4d7111-b3a9-488b-a7e9-6d902c9a27cf",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/k3s/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/admin/k3s/console/*"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "e1f333cf-3417-4c59-b0f3-24842a067ee4",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              },
              {
                "id": "2975ac81-53ad-4cc9-9f20-6da5ef209ab9",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "6b0955de-4731-446c-b05f-8f03300d5a13",
            "clientId": "traefik-forward-auth",
            "rootUrl": "",
            "adminUrl": "",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "lq1bFw1P9gTnXLcpU3K9DSAJAukWZxxN",
            "redirectUris": [
              "https://auth.127.0.0.1.nip.io/_oauth"
            ],
            "webOrigins": [
              "/*"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "id.token.as.detached.signature": "false",
              "saml.assertion.signature": "false",
              "saml.force.post.binding": "false",
              "saml.multivalued.roles": "false",
              "saml.encrypt": "false",
              "oauth2.device.authorization.grant.enabled": "false",
              "backchannel.logout.revoke.offline.tokens": "false",
              "saml.server.signature": "false",
              "saml.server.signature.keyinfo.ext": "false",
              "use.refresh.tokens": "true",
              "exclude.session.state.from.auth.response": "false",
              "oidc.ciba.grant.enabled": "false",
              "saml.artifact.binding": "false",
              "backchannel.logout.session.required": "true",
              "client_credentials.use_refresh_token": "false",
              "saml_force_name_id_format": "false",
              "require.pushed.authorization.requests": "false",
              "saml.client.signature": "false",
              "tls.client.certificate.bound.access.tokens": "false",
              "saml.authnstatement": "false",
              "display.on.consent.screen": "false",
              "saml.onetimeuse.condition": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
              {
                "id": "ad96eaa1-e401-4b0b-ac68-9bff39043336",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          }
        ],
        "clientScopes": [
          {
            "id": "7a30f640-dc9f-439e-9fe7-7c54995a7770",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "577d5cf9-b406-4f00-82df-e5268aa37a3b",
                "name": "address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-address-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute.formatted": "formatted",
                  "user.attribute.country": "country",
                  "user.attribute.postal_code": "postal_code",
                  "userinfo.token.claim": "true",
                  "user.attribute.street": "street",
                  "id.token.claim": "true",
                  "user.attribute.region": "region",
                  "access.token.claim": "true",
                  "user.attribute.locality": "locality"
                }
              }
            ]
          },
          {
            "id": "8656642e-c3a9-4cd9-a59b-be8cb310aa48",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "e7549fc3-f6b0-49ee-9b27-cb9ed05f0dcc",
                "name": "email",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "email",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "f76d4cc5-0824-4899-80fd-ba9bb3d30836",
                "name": "email verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "emailVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          },
          {
            "id": "5bb594ed-e8c4-4d76-9640-ce262b9ebafd",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
              "consent.screen.text": "${offlineAccessScopeConsentText}",
              "display.on.consent.screen": "true"
            }
          },
          {
            "id": "fa4b8dd5-bdd3-43cf-b304-e8e930c967a3",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "cd8c9891-ef92-41fe-a893-c77a2cd69f58",
                "name": "phone number",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumber",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "2c6e29ab-8e2c-4213-880b-cbb12898dbe3",
                "name": "phone number verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumberVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          },
          {
            "id": "3fc9ccf7-2b58-470f-9886-2b6bd3d9b0d3",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "1af6fe13-2587-4743-b8e1-e72b6cb4796d",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {}
              },
              {
                "id": "f385c2d6-5f03-4215-9b8c-b189c341eb13",
                "name": "client roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-client-role-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "resource_access.${client_id}.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              },
              {
                "id": "4e407d18-750a-4ba0-8600-a70fee4d6f0f",
                "name": "realm roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "realm_access.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              }
            ]
          },
          {
            "id": "8e9b0c68-c3ec-4d0b-a04f-b8f7943fb3b6",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
              "consent.screen.text": "${samlRoleListScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "id": "ca585776-745a-45f1-9a01-65350a88131b",
                "name": "role list",
                "protocol": "saml",
                "protocolMapper": "saml-role-list-mapper",
                "consentRequired": false,
                "config": {
                  "single": "false",
                  "attribute.nameformat": "Basic",
                  "attribute.name": "Role"
                }
              }
            ]
          },
          {
            "id": "f0b5b490-dd1e-4258-81b2-c5767102ab39",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "9b6dfbea-24bc-42f6-93e0-976e9a7a7ed2",
                "name": "upn",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "upn",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "5281ad1a-c4fd-48b3-83ff-1cf5c238d5b9",
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "multivalued": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "foo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "d07a3f36-5833-40ad-b746-f34bb88127f0",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false",
              "consent.screen.text": ""
            },
            "protocolMappers": [
              {
                "id": "c576a2cf-d820-4521-96ae-0dabeec09eda",
                "name": "allowed web origins",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-allowed-origins-mapper",
                "consentRequired": false,
                "config": {}
              }
            ]
          },
          {
            "id": "1cceda63-4d5b-435a-a6a0-62b6e7d73701",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "bd591f57-d6d3-48e8-8a08-cd618e10f2b9",
                "name": "nickname",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "nickname",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "nickname",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "bc1b8c12-4438-4421-bd6e-2ae7eada6607",
                "name": "full name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-full-name-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "id": "2d50d4a0-dbb1-4730-bbbe-1edb39f5fd42",
                "name": "updated at",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "updatedAt",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "updated_at",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "76d4d791-6a03-451b-a576-b6461fa2f344",
                "name": "birthdate",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "birthdate",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "birthdate",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "6d511ca7-19cd-4838-a999-453eef44d039",
                "name": "username",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "preferred_username",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "e024e42b-5992-4a27-9865-9ee537a55cfe",
                "name": "zoneinfo",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "zoneinfo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "zoneinfo",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "0cb9eb4d-cdb1-4ef2-bba1-dc0ea6dffd1f",
                "name": "middle name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "middleName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "middle_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "6ff1c838-b6a3-4aab-85ef-2c864e3e51c6",
                "name": "family name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "lastName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "family_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "e026254c-a325-4922-98ae-1296866db3aa",
                "name": "website",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "website",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "website",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "f32c8111-cd1f-4bdd-a43f-9575f7a82990",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "75afacc8-8abe-4246-bcb1-0042708bb341",
                "name": "given name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "firstName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "given_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "c8e16c9c-2d4c-4116-a326-0c5f1077fefd",
                "name": "profile",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "profile",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "profile",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "86e2793b-5a1b-455c-9355-914ca15296de",
                "name": "picture",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "picture",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "picture",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "563c6cfa-884a-44fc-af14-8d9d970a7371",
                "name": "gender",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "gender",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "gender",
                  "jsonType.label": "String"
                }
              }
            ]
          }
        ],
        "defaultDefaultClientScopes": [
          "profile",
          "roles",
          "email",
          "role_list",
          "web-origins"
        ],
        "defaultOptionalClientScopes": [
          "offline_access",
          "address",
          "microprofile-jwt",
          "phone"
        ],
        "browserSecurityHeaders": {
          "contentSecurityPolicyReportOnly": "",
          "xContentTypeOptions": "nosniff",
          "xRobotsTag": "none",
          "xFrameOptions": "SAMEORIGIN",
          "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
          "xXSSProtection": "1; mode=block",
          "strictTransportSecurity": "max-age=31536000; includeSubDomains"
        },
        "smtpServer": {},
        "eventsEnabled": false,
        "eventsListeners": [
          "jboss-logging"
        ],
        "enabledEventTypes": [],
        "adminEventsEnabled": false,
        "adminEventsDetailsEnabled": false,
        "identityProviders": [],
        "identityProviderMappers": [],
        "components": {
          "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
              "id": "a69be202-4a23-4f6a-85f8-99b2500cf1a1",
              "name": "Max Clients Limit",
              "providerId": "max-clients",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "max-clients": [
                  "200"
                ]
              }
            },
            {
              "id": "506e3202-9fb6-418a-a394-6e2b8b9a920f",
              "name": "Full Scope Disabled",
              "providerId": "scope",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "cf3d7355-4b2f-4904-b1a9-05395d35490c",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "oidc-usermodel-attribute-mapper",
                  "oidc-address-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "saml-user-attribute-mapper",
                  "saml-role-list-mapper",
                  "oidc-full-name-mapper",
                  "oidc-usermodel-property-mapper",
                  "saml-user-property-mapper"
                ]
              }
            },
            {
              "id": "be726eef-cad7-4ac1-b0e9-34996c427e83",
              "name": "Trusted Hosts",
              "providerId": "trusted-hosts",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "host-sending-registration-request-must-match": [
                  "true"
                ],
                "client-uris-must-match": [
                  "true"
                ]
              }
            },
            {
              "id": "7fd410e6-a50d-432c-952c-01eb8666b9d1",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "2d1f1bd2-3d18-41fd-8f23-22dc5f3cf507",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "saml-role-list-mapper",
                  "oidc-address-mapper",
                  "saml-user-attribute-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "saml-user-property-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "oidc-usermodel-property-mapper",
                  "oidc-full-name-mapper"
                ]
              }
            },
            {
              "id": "943ab23b-ddd1-4f5b-851d-a25bef44b750",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "e576e5a6-7c29-4530-a789-1aa27fbe759a",
              "name": "Consent Required",
              "providerId": "consent-required",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            }
          ],
          "org.keycloak.userprofile.UserProfileProvider": [
            {
              "id": "acbcee07-d924-41fb-b4f5-24373595ea8d",
              "providerId": "declarative-user-profile",
              "subComponents": {},
              "config": {}
            }
          ],
          "org.keycloak.keys.KeyProvider": [
            {
              "id": "2b35cbc6-efbd-4f5c-ab9b-445dc1f21124",
              "name": "rsa-enc-generated",
              "providerId": "rsa-enc-generated",
              "subComponents": {},
              "config": {
                "privateKey": [
                  "MIIEogIBAAKCAQEA4QZcI9leXEwqyFIIqKYPlr6j6vXNpnFc1ewe6C4+acfflJuqWe9GzzHHSMT8OuemRhHuP+qlz+2Ki7Ac79scuSwnaz30M8kwZNNfvZtkHmgfhlVCwYCN6FFvwdgOHX8zennn02ZfJyJrXtzKwQktfnVOiNXqbKysl1GYkg+H8aLK9J6siadbP78CLXIHpbcrRVtZ0PDouan0en+a7VYXIh2qWmsKqIOfDxJHlrfDtdo7ynZai1S8ocGpifsde/rC0p7Ryigu/Jiml2qJODl9ez95r/fcUtELoDQVcfPga2yDb4XrYZUkT3837S936hTDj6pal99y+EHuGUlKqPX3HwIDAQABAoIBAFo3dYt944H3m5NyqDwNT+StDATwhYG8o2602vNVTvqUAsSO4G5sKyR4naBEMafgJd6j47RGfDHv14MHmaJkY5Ct7iPl09lLSRazVAgtm6dBMZpm5nuz8bD5rWe3Gnmi/N2WsGYl/fIvr4J53OQlrNKtb04XDYSCejO0qAmvJl6umGFEqB7ASVtoV6vdPF9mn/4n2GwNNP3cZnxxDYqCdK/CvhwWHnAvOnjc3PQPBeg5m3/QuOzTu1oHL/NXMzEkZ++jx9VBNU55tI5DHxOyEdN9eNQIm/rfTzlhzxUduFv7J/F4JtSJRtdAOj5+3vptTWXX87CdjThuz7F6zvA9xgECgYEA8RQZUFY9xUHlUeHbKkW43SXEB8Zsy+qFxEB21TPGmqK3I+m9dR+Ry/9kgY2Va1PAxl87P4YCYt8jIs3S8+eHbcBIYaCCJ3ITP5QQ9lFYDqXtqTEn89w7sq+BV6slKh4SAPTLcLxxR45jH3CWpyLXkO0zC1WbWop99uiztjX3rwECgYEA7vPjzlZY5RlMsgmKrv3Z5DBU0XPfMM0j5Ii5W0Qn+UQFl6Du9Il22bIGXBIKIkv8whfMbStVNp6EC3XKbbhFI7ZvCOyoBXWLSXPswnMzBr4FW3JRNWjXwWYmpoVB/2NZNHDZFsgE9Bp5Cj63pdjmi1qY94HHZ6Fuz0T7QTudxh8CgYA3wGIqRgd6+sZBrW211PHvkrBG7Ah1EANnY1EX9SVU1ZRs5b0+vNJGzwU7QLbxXykRtyxIgIFExD2n6tmCNmUHaJRUn336CVOSPHe/vwgSOyU/H3MR3jigFh5fW+D4YIPhXLs/kxTPa4pY1vzAIjqf9Xr8gAuxYJ3I3//Pf6OMAQKBgG3mYjn+YLhN4IZp+Qzu2A4pZHlI77gEQaPUdlvRhwkQDfplHEIAD1ekl2Q1L9ACXufuBimXqoOKeHTE4iuAetwoBf12yvhnzX4lARmV3jwVnWUnuM31wHXEw7YGyAnr6ZVC6bWenRigLFdX7SMsFSy2qG/9knbJOqu9sEmaX8BFAoGAVti2Jc2wCGefK5IpjYNhrA4pQQD7G7JKggPt4CXF3UEMWQVY8AWCIFGaQiWvrFQIil3s7GmLcIOhQoXcMUFJC92+RfTYVUyqm6sqOTaiKjlkzuR7cCp/fNGz6qHPasXox4Cq9L+0flmuRZnclXgeIFVObl5cbMHPFh2le1TaqfM="
                ],
                "certificate": [
                  "MIIClTCCAX0CBgGBa3/GZDANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANrM3MwHhcNMjIwNjE2MDc1MDQ0WhcNMzIwNjE2MDc1MjI0WjAOMQwwCgYDVQQDDANrM3MwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDhBlwj2V5cTCrIUgiopg+WvqPq9c2mcVzV7B7oLj5px9+Um6pZ70bPMcdIxPw656ZGEe4/6qXP7YqLsBzv2xy5LCdrPfQzyTBk01+9m2QeaB+GVULBgI3oUW/B2A4dfzN6eefTZl8nImte3MrBCS1+dU6I1epsrKyXUZiSD4fxosr0nqyJp1s/vwItcgeltytFW1nQ8Oi5qfR6f5rtVhciHapaawqog58PEkeWt8O12jvKdlqLVLyhwamJ+x17+sLSntHKKC78mKaXaok4OX17P3mv99xS0QugNBVx8+BrbINvhethlSRPfzftL3fqFMOPqlqX33L4Qe4ZSUqo9fcfAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAFB0KM8H4JiaA8hyTfLnWkWVzch3ZhpEEFPrlukmHW9HGjOiYBHps7fPzSAdIOl1uAOkl1hARWTmNN5vXE22+mVcLllKZbwvlKeXFCGeYtfciyBMoU+HkqlrzOd20LB3RM9Uzqg2TFv32FfSDijlCbzY6Nv+U3IOrDP+izr2UNzwQbwfu7A6zzhsdcAY9aRkW8Rzl8bzN6QqRHo7IkwuGvyWMWsUd/RRP/IBWSCKUPCjGM5Js0ed6sHZVWgHX5EgT8v8rKqxZV51A5diD1Hwpg3E8GTwuui0pKyUx55Ol9PFV2cVt2kjHd1Q/+6Pb/Wgqr3ZymRZMLbvJZXrQLfrRaQ="
                ],
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "RSA-OAEP"
                ]
              }
            },
            {
              "id": "b927dd32-2c82-40cc-8601-18088b457823",
              "name": "rsa-generated",
              "providerId": "rsa-generated",
              "subComponents": {},
              "config": {
                "privateKey": [
                  "MIIEogIBAAKCAQEA4YBnKiWBHJ+yaCB0yDKeniOylCL+p7D72HTf7/6AkoEfhnp0wXfmtIAkPLNZdcA7WUP/v1uVAkFqgDXUEOiP87AsDIBo02ec6ld6GSNT6VXRZ/eSE8aoIYCfVhkc8u1D3uhUegzRz7KmLT9mbU779016XhTf8i9JgTfqfYrat1MNgA3NPWpLMLbz7EkfY4Uc/e79u/kZmXYEzWJB1KwH90INuFUj15Y7WIohE+Ub+AaqTPm/rXK17e3cpOUwDpGn2qYu4T71iwQWWEkn9HNDjz3zRP9vGC1ew92seF/M8dKN0R629P2aiBvqf63L+lyBtSI4DVGOjos36rMzGTEwYwIDAQABAoIBABM+mw9MvhUMR/R8+JpxP3otf7sGtYboIsYZS1c2+BAItwEKCFbOfcDfwrfvcm4LJsV6eSQCk9fqb0Vb0qpSvp5EZa33c3q/N/QD3SayDiI2sbVWun+3j3e0e2SkpgTRXN50I2l7GJjKHUZ1R6+Ccxxq30uSKn6HrJU7iWaHaB0G73IANAiC4oEz+tG3dhqWIbpK6QYwjfsqyLg71wFpMJUgR2o/qLnorBWqfZduCNl/mw8bj1OrELU/XbCJBPkAFyxtZyfz4MXT5SnXuLzEW/pY2cS8xVy0PNxFt33GZ8cbnXDkqrP9qlvwFc8U9vA5UHEnf+1lrr9uzWn9kD8JPhECgYEA+NdvLfmuYh+HbtWYYQX0l/Z9U07h9odMlWRb0PCRFXqpQrcNXwgSavgCNFUR1maQguZ3ZJIlLQOpjXUZNGaBv1uI/ss90jp9BCVGoTEySvCk3wPBpjdHc/QVinSn0PnhQRQtfFLCV9MD1sw2zIIzD+ChafTumNrv/bjvnNcW+qsCgYEA5/0ViPDv5/bvtqCWS8Bf2aQi7JtuL8MrxlRbSlcHT8ErPK1gtyULKRzO/wMKu+iuYa5AJoE30mjpxrNbf8xDtqxmwv8GjTKP/zdRUYISHOJNRrbCA5Tj1OjWj8w/lHSm5Vzc7MrEpo2eYdNJUSmyrtJyM0FHQumu3sxV3KCZISkCgYBApK6UMfWUNf6X01MXeVWWGIlsF+TphzJk6MJVX/lArDHGTAlkM5OdSDpCYAsXOGO4Lai8bp7Lt9TXE6FtlGeGT4AiOKghseICLrDPdRlMkIE0EiS/SkL8o17pLe7egdt7bYN3dYRZDk9EAJ8Ht5cOO9uSy/cjrFSGBAHzK4kjqwKBgHKmpG7yTE6CvsOuJ7k2UOiZ8tymkFUwisDQzfE2g5mJ6RlqwkKhHxvpbe+gDD0D6LLD0FZ3RCRLz0VxPMYzKD/ugjbanN1JYNsL9rdmphb6TKCnD8l/Wv3NOMUGd2GiKR1vwIuSRo/dq6nDJxfimLlHrkLgfxx1qwPXTpPkFunJAoGAWBSumaLYDjDbQc/oapU8S3aXTArCNsLYMEKZWn6GanwQJuASSbUzKhpW9UIlmVFSFsy4QlyT1O4xwZALsfMeVdaiWnK8fYXzrBUUA+qN8aGvCCB3ZD+xIxG9iELaQsaizR7u/4RObs8zZ7xaUljUUgb6Psoij0uK+Y70lfiRuYk="
                ],
                "certificate": [
                  "MIIClTCCAX0CBgGBa3/IHzANBgkqhkiG9w0BAQsFADAOMQwwCgYDVQQDDANrM3MwHhcNMjIwNjE2MDc1MDQ1WhcNMzIwNjE2MDc1MjI1WjAOMQwwCgYDVQQDDANrM3MwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDhgGcqJYEcn7JoIHTIMp6eI7KUIv6nsPvYdN/v/oCSgR+GenTBd+a0gCQ8s1l1wDtZQ/+/W5UCQWqANdQQ6I/zsCwMgGjTZ5zqV3oZI1PpVdFn95ITxqghgJ9WGRzy7UPe6FR6DNHPsqYtP2ZtTvv3TXpeFN/yL0mBN+p9itq3Uw2ADc09akswtvPsSR9jhRz97v27+RmZdgTNYkHUrAf3Qg24VSPXljtYiiET5Rv4BqpM+b+tcrXt7dyk5TAOkafapi7hPvWLBBZYSSf0c0OPPfNE/28YLV7D3ax4X8zx0o3RHrb0/ZqIG+p/rcv6XIG1IjgNUY6OizfqszMZMTBjAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAE1XPymPYSEHMVQPbRGm7nIn2wVCwyzHrOdovcKcKwSZZCNpGQxSn2D7KkRiShDzr10we88Kik/EX7bbwMMyHh3m+vEolC8n4AapyIA5cq2yM997RyDjy6ugCqPu4blsI6n7sMfRS7q3Sg/mfWjHcvt7k6vRwN9FsA9bf16L0dajBQMHMV6q6u0ZDFzCUdDvurnAfxSDd0SWu740yXW8G1gZR/Ygv0wJsil7Ow385SdJFKTr6h0M3PtCMULYIHM+241Q8Tv7I8jPvUkKZqTa/VQuoA8KfOU/jaG++RkcQAHnyq63pUPYduQm3QfryGs/hU45CjZ/DE+HIZjGAr6pals="
                ],
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "a4a43978-f8a8-419c-b9e4-a00d64cccfe1",
              "name": "hmac-generated",
              "providerId": "hmac-generated",
              "subComponents": {},
              "config": {
                "kid": [
                  "c5af1693-e444-427b-85de-10acf66073a4"
                ],
                "secret": [
                  "FgO2RemZgJYAW7OX5e47oDfYo2n9FejnwAajPDQrJpQ7cmXeGcYUmWQjb2--r3eucN9TPQ4e-ctomIlLMvmcPw"
                ],
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "HS256"
                ]
              }
            },
            {
              "id": "cd772840-db74-4d82-99bb-259cbf604fec",
              "name": "aes-generated",
              "providerId": "aes-generated",
              "subComponents": {},
              "config": {
                "kid": [
                  "bdc9d981-0b9b-4f45-989c-e1f964f39688"
                ],
                "secret": [
                  "kvz3Vi-NVpwpOia8PbPY3A"
                ],
                "priority": [
                  "100"
                ]
              }
            }
          ]
        },
        "internationalizationEnabled": false,
        "supportedLocales": [],
        "authenticationFlows": [
          {
            "id": "b1ed295a-426a-4ce6-bc50-7832f56701f6",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-email-verification",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "flowAlias": "Verify Existing Account by Re-authentication",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "a8e8fbff-e9ba-4ad3-99e5-0563181c4639",
            "alias": "Authentication Options",
            "description": "Authentication options.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "basic-auth",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "basic-auth-otp",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 30,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "e82f6aa8-2e4e-4e26-bd54-a1d9ef696c29",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "1c6eba63-c627-427c-b0a5-338c3da45ad3",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "direct-grant-validate-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "409374b1-de63-4118-a0e4-8c6a5c0d4a6b",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "a1e0bc1f-5cae-41fa-87c0-1633cafa0329",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-confirm-link",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "flowAlias": "Account verification options",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "5ea9d8cf-2622-4e18-9c36-9843f6dfdfc9",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "reset-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "6844ecfd-7723-479d-9e5d-9f6eb05069bc",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "create unique user config",
                "authenticator": "idp-create-user-if-unique",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "flowAlias": "Handle Existing Account",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "bfbdd2c5-c58d-4567-92c6-a3ffe35cdea3",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "flowAlias": "First broker login - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "59e19a7c-7995-419d-9218-a6c576ba281e",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-cookie",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "identity-provider-redirector",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 25,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "flowAlias": "forms",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "72f09c6d-cc91-4277-b02f-a80b04e0a0c5",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "client-secret",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "client-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "client-secret-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "client-x509",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 40,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "d1df83b7-070b-4476-9573-c3715234c4b1",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "direct-grant-validate-username",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "direct-grant-validate-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 30,
                "flowAlias": "Direct Grant - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "d5180960-3f6c-449d-a9d2-8d47f903ccca",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "docker-http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "7cb05924-594f-4e3c-899c-f7efb80e290f",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "review profile config",
                "authenticator": "idp-review-profile",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "flowAlias": "User creation or linking",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "91c8085d-03ef-4310-ba13-f66ca1a31fd1",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "flowAlias": "Browser - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "29246985-b3d4-47b6-82e3-1ef05a2a4ba5",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "no-cookie-redirect",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "flowAlias": "Authentication Options",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "33576c03-9282-4d0a-b685-327c662e3a30",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-page-form",
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 10,
                "flowAlias": "registration form",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "0b1b6edc-6904-447a-983f-69b40a48bff7",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-user-creation",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "registration-profile-action",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 40,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "registration-password-action",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 50,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "registration-recaptcha-action",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 60,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "0adf82d6-a73f-4fd2-96dd-d432a5798ecf",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "reset-credentials-choose-user",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "reset-credential-email",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "reset-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 30,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 40,
                "flowAlias": "Reset - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "38c66481-9c42-4a34-b57c-5d8fe28e7312",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          }
        ],
        "authenticatorConfig": [
          {
            "id": "6d61fb59-7b7b-49c6-91a6-74adedd03eff",
            "alias": "create unique user config",
            "config": {
              "require.password.update.after.registration": "false"
            }
          },
          {
            "id": "00904d7e-3696-4d94-a053-07efedf39175",
            "alias": "review profile config",
            "config": {
              "update.profile.on.first.login": "missing"
            }
          }
        ],
        "requiredActions": [
          {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
          },
          {
            "alias": "terms_and_conditions",
            "name": "Terms and Conditions",
            "providerId": "terms_and_conditions",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
          },
          {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
          },
          {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
          },
          {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
          },
          {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
          },
          {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
          }
        ],
        "browserFlow": "browser",
        "registrationFlow": "registration",
        "directGrantFlow": "direct grant",
        "resetCredentialsFlow": "reset credentials",
        "clientAuthenticationFlow": "clients",
        "dockerAuthenticationFlow": "docker auth",
        "attributes": {
          "cibaBackchannelTokenDeliveryMode": "poll",
          "cibaExpiresIn": "120",
          "cibaAuthRequestedUserHint": "login_hint",
          "oauth2DeviceCodeLifespan": "600",
          "clientOfflineSessionMaxLifespan": "0",
          "oauth2DevicePollingInterval": "5",
          "clientSessionIdleTimeout": "0",
          "parRequestUriLifespan": "60",
          "clientSessionMaxLifespan": "0",
          "clientOfflineSessionIdleTimeout": "0",
          "cibaInterval": "5"
        },
        "keycloakVersion": "16.1.0",
        "userManagedAccessAllowed": false,
        "clientProfiles": {
          "profiles": []
        },
        "clientPolicies": {
          "policies": []
        }
      },
      {
        "id": "master",
        "realm": "master",
        "displayName": "Keycloak",
        "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
        "notBefore": 0,
        "defaultSignatureAlgorithm": "RS256",
        "revokeRefreshToken": false,
        "refreshTokenMaxReuse": 0,
        "accessTokenLifespan": 60,
        "accessTokenLifespanForImplicitFlow": 900,
        "ssoSessionIdleTimeout": 1800,
        "ssoSessionMaxLifespan": 36000,
        "ssoSessionIdleTimeoutRememberMe": 0,
        "ssoSessionMaxLifespanRememberMe": 0,
        "offlineSessionIdleTimeout": 2592000,
        "offlineSessionMaxLifespanEnabled": false,
        "offlineSessionMaxLifespan": 5184000,
        "clientSessionIdleTimeout": 0,
        "clientSessionMaxLifespan": 0,
        "clientOfflineSessionIdleTimeout": 0,
        "clientOfflineSessionMaxLifespan": 0,
        "accessCodeLifespan": 60,
        "accessCodeLifespanUserAction": 300,
        "accessCodeLifespanLogin": 1800,
        "actionTokenGeneratedByAdminLifespan": 43200,
        "actionTokenGeneratedByUserLifespan": 300,
        "oauth2DeviceCodeLifespan": 600,
        "oauth2DevicePollingInterval": 600,
        "enabled": true,
        "sslRequired": "external",
        "registrationAllowed": false,
        "registrationEmailAsUsername": false,
        "rememberMe": false,
        "verifyEmail": false,
        "loginWithEmailAllowed": true,
        "duplicateEmailsAllowed": false,
        "resetPasswordAllowed": false,
        "editUsernameAllowed": false,
        "bruteForceProtected": false,
        "permanentLockout": false,
        "maxFailureWaitSeconds": 900,
        "minimumQuickLoginWaitSeconds": 60,
        "waitIncrementSeconds": 60,
        "quickLoginCheckMilliSeconds": 1000,
        "maxDeltaTimeSeconds": 43200,
        "failureFactor": 30,
        "roles": {
          "realm": [
            {
              "id": "76561076-dc37-43f7-bbc0-91c0d214ddd3",
              "name": "uma_authorization",
              "description": "${role_uma_authorization}",
              "composite": false,
              "clientRole": false,
              "containerId": "master",
              "attributes": {}
            },
            {
              "id": "3ea07538-3f85-4545-8f83-1c769f7a3d56",
              "name": "offline_access",
              "description": "${role_offline-access}",
              "composite": false,
              "clientRole": false,
              "containerId": "master",
              "attributes": {}
            },
            {
              "id": "5e38408b-c2fe-422b-af76-7df18021d8f3",
              "name": "create-realm",
              "description": "${role_create-realm}",
              "composite": false,
              "clientRole": false,
              "containerId": "master",
              "attributes": {}
            },
            {
              "id": "5cd86234-8761-4f9f-838c-f121d5be856d",
              "name": "default-roles-master",
              "description": "${role_default-roles}",
              "composite": true,
              "composites": {
                "realm": [
                  "offline_access",
                  "uma_authorization"
                ],
                "client": {
                  "account": [
                    "manage-account",
                    "view-profile"
                  ]
                }
              },
              "clientRole": false,
              "containerId": "master",
              "attributes": {}
            },
            {
              "id": "61bff6bd-6f8c-4f91-b985-fda9c60b4dfe",
              "name": "admin",
              "description": "${role_admin}",
              "composite": true,
              "composites": {
                "realm": [
                  "create-realm"
                ],
                "client": {
                  "master-realm": [
                    "manage-events",
                    "manage-authorization",
                    "view-identity-providers",
                    "query-groups",
                    "impersonation",
                    "view-realm",
                    "view-clients",
                    "view-authorization",
                    "create-client",
                    "query-realms",
                    "manage-users",
                    "view-users",
                    "manage-realm",
                    "manage-identity-providers",
                    "query-users",
                    "query-clients",
                    "manage-clients",
                    "view-events"
                  ],
                  "k3s-realm": [
                    "manage-authorization",
                    "view-users",
                    "query-users",
                    "view-realm",
                    "manage-clients",
                    "view-clients",
                    "impersonation",
                    "manage-realm",
                    "query-clients",
                    "create-client",
                    "query-groups",
                    "manage-identity-providers",
                    "view-identity-providers",
                    "query-realms",
                    "view-authorization",
                    "manage-events",
                    "view-events",
                    "manage-users"
                  ]
                }
              },
              "clientRole": false,
              "containerId": "master",
              "attributes": {}
            }
          ],
          "client": {
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
              {
                "id": "032afd62-cec1-4504-9489-f5b245049c8f",
                "name": "read-token",
                "description": "${role_read-token}",
                "composite": false,
                "clientRole": true,
                "containerId": "1ef78ca8-6249-4f17-ad3c-a8b136576257",
                "attributes": {}
              }
            ],
            "master-realm": [
              {
                "id": "f494a0d3-3798-48b8-8c1d-d84a8ad09ba0",
                "name": "view-clients",
                "description": "${role_view-clients}",
                "composite": true,
                "composites": {
                  "client": {
                    "master-realm": [
                      "query-clients"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "3fa632e0-54fa-4183-9ec5-8f26886b6392",
                "name": "view-authorization",
                "description": "${role_view-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "8e6f033f-194f-400a-a649-bd551d64345a",
                "name": "create-client",
                "description": "${role_create-client}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "ca2d04c8-b67d-4faf-b255-6c570139a79c",
                "name": "manage-users",
                "description": "${role_manage-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "a72e91ce-2cfe-4f01-9c14-e364584b896b",
                "name": "query-realms",
                "description": "${role_query-realms}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "9afaffdd-56c0-4929-aa2b-4eaeb358270e",
                "name": "manage-events",
                "description": "${role_manage-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "18d13380-c00b-4376-923d-840b88cf9765",
                "name": "manage-authorization",
                "description": "${role_manage-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "e5cb1f55-d76a-403c-88be-1cbd21e9a637",
                "name": "view-identity-providers",
                "description": "${role_view-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "4564e43a-c601-4677-a451-58a243f4b80a",
                "name": "view-users",
                "description": "${role_view-users}",
                "composite": true,
                "composites": {
                  "client": {
                    "master-realm": [
                      "query-users",
                      "query-groups"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "1b512585-2327-4d84-8246-8d546d738fcc",
                "name": "manage-realm",
                "description": "${role_manage-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "c182bc8f-5f38-449b-ba7c-7121d9f38354",
                "name": "query-groups",
                "description": "${role_query-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "0a34880a-adfc-4787-9a99-95a990ab26ef",
                "name": "impersonation",
                "description": "${role_impersonation}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "13a25444-e5f0-478c-bff5-25945d7be273",
                "name": "manage-identity-providers",
                "description": "${role_manage-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "36c0bce8-3e12-4caf-953e-a6334f2659f0",
                "name": "query-users",
                "description": "${role_query-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "de36ed57-2304-43f0-9d09-6d17f2ce1ae1",
                "name": "manage-clients",
                "description": "${role_manage-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "a59f6b08-106c-40fb-990b-54c553c835e5",
                "name": "query-clients",
                "description": "${role_query-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "4cb48a21-2de1-4aed-bc06-6d37b9adfd0b",
                "name": "view-events",
                "description": "${role_view-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              },
              {
                "id": "3c609893-c8ea-409b-ab58-af8f99cc32c4",
                "name": "view-realm",
                "description": "${role_view-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
                "attributes": {}
              }
            ],
            "account": [
              {
                "id": "384fd725-0dca-482d-bb4a-54131ee6613c",
                "name": "view-applications",
                "description": "${role_view-applications}",
                "composite": false,
                "clientRole": true,
                "containerId": "c6a47d28-c71a-466f-a3da-4794a748f750",
                "attributes": {}
              },
              {
                "id": "23656ba8-caa3-4d6c-adf9-9709522ecde1",
                "name": "manage-account",
                "description": "${role_manage-account}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "manage-account-links"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "c6a47d28-c71a-466f-a3da-4794a748f750",
                "attributes": {}
              },
              {
                "id": "c5b1e18b-d384-4c60-88f7-19600e9496ea",
                "name": "view-consent",
                "description": "${role_view-consent}",
                "composite": false,
                "clientRole": true,
                "containerId": "c6a47d28-c71a-466f-a3da-4794a748f750",
                "attributes": {}
              },
              {
                "id": "283fac17-9a77-4513-b29a-7c08aa02ce57",
                "name": "manage-consent",
                "description": "${role_manage-consent}",
                "composite": true,
                "composites": {
                  "client": {
                    "account": [
                      "view-consent"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "c6a47d28-c71a-466f-a3da-4794a748f750",
                "attributes": {}
              },
              {
                "id": "aaa408db-9283-458c-b76b-f9466bd84934",
                "name": "view-profile",
                "description": "${role_view-profile}",
                "composite": false,
                "clientRole": true,
                "containerId": "c6a47d28-c71a-466f-a3da-4794a748f750",
                "attributes": {}
              },
              {
                "id": "31ddac5b-fdb0-47c6-9970-df9d1dbabc6d",
                "name": "delete-account",
                "description": "${role_delete-account}",
                "composite": false,
                "clientRole": true,
                "containerId": "c6a47d28-c71a-466f-a3da-4794a748f750",
                "attributes": {}
              },
              {
                "id": "965c9ee5-947d-433f-88a6-9f58c6557488",
                "name": "manage-account-links",
                "description": "${role_manage-account-links}",
                "composite": false,
                "clientRole": true,
                "containerId": "c6a47d28-c71a-466f-a3da-4794a748f750",
                "attributes": {}
              }
            ],
            "k3s-realm": [
              {
                "id": "dda05f99-ba81-412e-9c0d-33225da8bc60",
                "name": "manage-authorization",
                "description": "${role_manage-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "9f53ef21-a91f-4e1a-8cfc-ba71d6b84a19",
                "name": "view-identity-providers",
                "description": "${role_view-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "b06d1e6f-2df1-42d7-83ee-1a6e01300824",
                "name": "view-users",
                "description": "${role_view-users}",
                "composite": true,
                "composites": {
                  "client": {
                    "k3s-realm": [
                      "query-users",
                      "query-groups"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "27662e19-285e-4122-ba87-f1ef56ecdcbb",
                "name": "query-realms",
                "description": "${role_query-realms}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "33a8392b-6365-4e57-a7c5-5b7c21a6284c",
                "name": "query-users",
                "description": "${role_query-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "6d7395eb-90ac-46aa-b4f4-57b19da04bc4",
                "name": "view-realm",
                "description": "${role_view-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "59489913-34af-4e79-adb5-6d6499f5460a",
                "name": "manage-clients",
                "description": "${role_manage-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "dcf650be-1ba5-4522-9eb4-401a6e922698",
                "name": "view-clients",
                "description": "${role_view-clients}",
                "composite": true,
                "composites": {
                  "client": {
                    "k3s-realm": [
                      "query-clients"
                    ]
                  }
                },
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "b770d289-5406-479a-9cc9-36339480b932",
                "name": "view-authorization",
                "description": "${role_view-authorization}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "00bfcbc2-5eb0-42cb-8704-db395ae258fb",
                "name": "manage-events",
                "description": "${role_manage-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "4f14db2e-4e64-411c-b006-bd627498028c",
                "name": "impersonation",
                "description": "${role_impersonation}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "b7b25148-d0db-4044-a8ee-c26c9ffa8f9b",
                "name": "manage-realm",
                "description": "${role_manage-realm}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "cfb122bb-7695-43af-a739-ff04577a7728",
                "name": "query-clients",
                "description": "${role_query-clients}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "174e89a5-fd51-489d-8bb7-dabcc67993d0",
                "name": "view-events",
                "description": "${role_view-events}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "e15e4a6d-84df-41ad-974d-f95f524e67e4",
                "name": "create-client",
                "description": "${role_create-client}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "c87822de-d54a-4904-a3a1-3f21d64aa940",
                "name": "query-groups",
                "description": "${role_query-groups}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "3ea6950f-4e3a-44a9-ac6e-f00a52763861",
                "name": "manage-identity-providers",
                "description": "${role_manage-identity-providers}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              },
              {
                "id": "76f25c5a-d181-425a-ba8f-f3810047681a",
                "name": "manage-users",
                "description": "${role_manage-users}",
                "composite": false,
                "clientRole": true,
                "containerId": "6e59a863-2fc2-4961-ad92-982c377012c1",
                "attributes": {}
              }
            ]
          }
        },
        "groups": [],
        "defaultRole": {
          "id": "5cd86234-8761-4f9f-838c-f121d5be856d",
          "name": "default-roles-master",
          "description": "${role_default-roles}",
          "composite": true,
          "clientRole": false,
          "containerId": "master"
        },
        "requiredCredentials": [
          "password"
        ],
        "otpPolicyType": "totp",
        "otpPolicyAlgorithm": "HmacSHA1",
        "otpPolicyInitialCounter": 0,
        "otpPolicyDigits": 6,
        "otpPolicyLookAheadWindow": 1,
        "otpPolicyPeriod": 30,
        "otpSupportedApplications": [
          "FreeOTP",
          "Google Authenticator"
        ],
        "webAuthnPolicyRpEntityName": "keycloak",
        "webAuthnPolicySignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyRpId": "",
        "webAuthnPolicyAttestationConveyancePreference": "not specified",
        "webAuthnPolicyAuthenticatorAttachment": "not specified",
        "webAuthnPolicyRequireResidentKey": "not specified",
        "webAuthnPolicyUserVerificationRequirement": "not specified",
        "webAuthnPolicyCreateTimeout": 0,
        "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyAcceptableAaguids": [],
        "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
        "webAuthnPolicyPasswordlessSignatureAlgorithms": [
          "ES256"
        ],
        "webAuthnPolicyPasswordlessRpId": "",
        "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
        "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
        "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
        "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
        "webAuthnPolicyPasswordlessCreateTimeout": 0,
        "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyPasswordlessAcceptableAaguids": [],
        "users": [
          {
            "id": "e38d2d6c-0373-4024-a6d2-151615b830f7",
            "createdTimestamp": 1655365946866,
            "username": "admin@keycloak",
            "enabled": true,
            "totp": true,
            "emailVerified": false,
            "credentials": [
              {
                "id": "2464b8dc-dc7b-4394-8a55-fe9d93e8ee66",
                "type": "password",
                "createdDate": 1655664536065,
                "secretData": "{\"value\":\"FdGwllq4DWXVSYr0WXXojCcUWhr56DGmUKRlNILyI+g63PxKuSnPG9/udz3ceO3q3s2U4OxywG5uVJSibsQfmQ==\",\"salt\":\"65ObfEfNmcOkIbNHSNCAAw==\",\"additionalParameters\":{}}",
                "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
              },
              {
                "id": "30e2c318-d0cb-40e4-bca8-e4318577bc6b",
                "type": "otp",
                "userLabel": "1password",
                "createdDate": 1655664566281,
                "secretData": "{\"value\":\"4crwQePVdJ4l46TNOxMA\"}",
                "credentialData": "{\"subType\":\"totp\",\"digits\":6,\"counter\":0,\"period\":30,\"algorithm\":\"HmacSHA1\"}"
              }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": [
              "default-roles-master",
              "admin"
            ],
            "notBefore": 0,
            "groups": []
          }
        ],
        "scopeMappings": [
          {
            "clientScope": "offline_access",
            "roles": [
              "offline_access"
            ]
          }
        ],
        "clientScopeMappings": {
          "account": [
            {
              "client": "account-console",
              "roles": [
                "manage-account"
              ]
            }
          ]
        },
        "clients": [
          {
            "id": "c6a47d28-c71a-466f-a3da-4794a748f750",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/master/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/master/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "f29d04f0-4fa3-49a7-b990-4b14a164fdda",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "2741f805-304c-4355-ab7a-d3a956400680",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/master/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/realms/master/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "e8a8491e-cbc7-4049-b3d0-06d14090668c",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              },
              {
                "id": "4aedbfa1-4963-4b9d-a6ee-bf3adc4590a6",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "83c0bcda-00ba-4bdd-bc85-1b8829b6998c",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "a7467908-71b2-47a8-850f-44dd0fe131c9",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "1ef78ca8-6249-4f17-ad3c-a8b136576257",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "83c2119d-f662-468c-a7e3-c31301113d91",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "6e59a863-2fc2-4961-ad92-982c377012c1",
            "clientId": "k3s-realm",
            "name": "k3s Realm",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "792398f0-eaf8-4528-8b46-ed9df4bec290",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [],
            "optionalClientScopes": []
          },
          {
            "id": "bb9cdf5e-6fe9-4db6-8c5f-e0ea2bd1a5fa",
            "clientId": "master-realm",
            "name": "master Realm",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "4892d8f0-a865-45e0-80ee-a4e04ee42156",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          },
          {
            "id": "6b6e9edb-6036-486d-b76e-cdf9b6433e29",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/master/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
              "/admin/master/console/*"
            ],
            "webOrigins": [
              "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
              "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
              {
                "id": "80ef08db-d42a-4b6a-b02e-6c0fb817031b",
                "name": "docker-v2-allow-all-mapper",
                "protocol": "docker-v2",
                "protocolMapper": "docker-v2-allow-all-mapper",
                "consentRequired": false,
                "config": {}
              },
              {
                "id": "12679977-3b8c-47ab-ab63-58e7bd452615",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ],
            "defaultClientScopes": [
              "web-origins",
              "roles",
              "profile",
              "email"
            ],
            "optionalClientScopes": [
              "address",
              "phone",
              "offline_access",
              "microprofile-jwt"
            ]
          }
        ],
        "clientScopes": [
          {
            "id": "bb8d7bb4-57a2-4bdf-a5e4-797167d6dbaa",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
              "consent.screen.text": "${offlineAccessScopeConsentText}",
              "display.on.consent.screen": "true"
            }
          },
          {
            "id": "317599d3-3e22-4866-8192-0f5249ee345c",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "8e5c6a26-84c9-4fbe-a80b-ec6caa5e4039",
                "name": "email",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "email",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "7893df9b-0577-4cda-8fce-64462cdd8a57",
                "name": "email verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "emailVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "email_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          },
          {
            "id": "cbefec32-1834-4827-acaa-fe7b434cc9ae",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "66135b0f-efd4-4e86-bad1-9cc051e11a08",
                "name": "phone number",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumber",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "73788d8b-52f6-4630-8995-af975160e496",
                "name": "phone number verified",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "phoneNumberVerified",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "phone_number_verified",
                  "jsonType.label": "boolean"
                }
              }
            ]
          },
          {
            "id": "a17a7d79-da06-42e6-b799-bf9cc9dd26d0",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "false",
              "consent.screen.text": ""
            },
            "protocolMappers": [
              {
                "id": "ec4f5bfb-dbde-4a70-a72c-c78b24c439a7",
                "name": "allowed web origins",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-allowed-origins-mapper",
                "consentRequired": false,
                "config": {}
              }
            ]
          },
          {
            "id": "fdd2b926-6870-40fa-a34f-d8c7afd51f06",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
              "consent.screen.text": "${samlRoleListScopeConsentText}",
              "display.on.consent.screen": "true"
            },
            "protocolMappers": [
              {
                "id": "30ce8285-9b91-4ab8-8aa7-a00fa9dde169",
                "name": "role list",
                "protocol": "saml",
                "protocolMapper": "saml-role-list-mapper",
                "consentRequired": false,
                "config": {
                  "single": "false",
                  "attribute.nameformat": "Basic",
                  "attribute.name": "Role"
                }
              }
            ]
          },
          {
            "id": "743720e7-9189-41d4-b975-57fd6a4ca447",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "false",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "a424021c-316f-4b5b-8bca-cce23a064b6e",
                "name": "client roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-client-role-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "resource_access.${client_id}.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              },
              {
                "id": "254ef030-ea85-46f6-b4bf-224f16c61dcf",
                "name": "realm roles",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute": "foo",
                  "access.token.claim": "true",
                  "claim.name": "realm_access.roles",
                  "jsonType.label": "String",
                  "multivalued": "true"
                }
              },
              {
                "id": "3d509f0c-323f-4036-a4e4-0622bcd0c6a6",
                "name": "audience resolve",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-audience-resolve-mapper",
                "consentRequired": false,
                "config": {}
              }
            ]
          },
          {
            "id": "e467dfce-3509-4352-911b-34d5056705a4",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "false"
            },
            "protocolMappers": [
              {
                "id": "7793773f-aa71-4a85-9281-2b57807cd3a0",
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-realm-role-mapper",
                "consentRequired": false,
                "config": {
                  "multivalued": "true",
                  "userinfo.token.claim": "true",
                  "user.attribute": "foo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "ad5b8da4-c79a-45a8-a11c-325bd0ab6781",
                "name": "upn",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "upn",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "3834f240-0677-4a29-9a6a-c075c8745f3f",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "bdcef1db-f8d1-4702-a504-e2320a077a0f",
                "name": "birthdate",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "birthdate",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "birthdate",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "8e236142-1f69-4fc7-8b79-4d46feba1fc8",
                "name": "nickname",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "nickname",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "nickname",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "17eea918-9b43-401e-a2e5-7b2b027612d2",
                "name": "picture",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "picture",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "picture",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "bb7819e7-4e32-4f04-b0f3-363c05f38c48",
                "name": "updated at",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "updatedAt",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "updated_at",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "881d8c53-3d69-4b7c-8c7a-68a2aecc157c",
                "name": "website",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "website",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "website",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "1514f362-5f0c-46c2-80c5-82f08dbcd26f",
                "name": "full name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-full-name-mapper",
                "consentRequired": false,
                "config": {
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "userinfo.token.claim": "true"
                }
              },
              {
                "id": "6933982e-e68f-44b0-8f2a-40576f655c9c",
                "name": "middle name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "middleName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "middle_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "4ca37e47-4d77-445b-a061-4ff22ff63af3",
                "name": "username",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "username",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "preferred_username",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "ad186357-2fca-4581-be76-792c0be9f508",
                "name": "zoneinfo",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "zoneinfo",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "zoneinfo",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "61df3549-c033-45e3-baf5-be8e65d88a52",
                "name": "profile",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "profile",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "profile",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "3e3c2b58-d707-42fc-9f47-121f503fc7ea",
                "name": "family name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "lastName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "family_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "7ee354fe-2b3f-462c-b925-742be14008de",
                "name": "gender",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "gender",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "gender",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "d84c4752-d166-404c-8e92-deed01d1a7c1",
                "name": "given name",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-property-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "firstName",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "given_name",
                  "jsonType.label": "String"
                }
              },
              {
                "id": "341e09a3-4245-4bd0-ac2c-b78eb0044887",
                "name": "locale",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-usermodel-attribute-mapper",
                "consentRequired": false,
                "config": {
                  "userinfo.token.claim": "true",
                  "user.attribute": "locale",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "locale",
                  "jsonType.label": "String"
                }
              }
            ]
          },
          {
            "id": "8cd40a64-daed-444d-bcae-db9595710d1f",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
              "include.in.token.scope": "true",
              "display.on.consent.screen": "true",
              "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
              {
                "id": "4bc7c7cf-39f1-4773-a63f-a01eefd7d3cf",
                "name": "address",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-address-mapper",
                "consentRequired": false,
                "config": {
                  "user.attribute.formatted": "formatted",
                  "user.attribute.country": "country",
                  "user.attribute.postal_code": "postal_code",
                  "userinfo.token.claim": "true",
                  "user.attribute.street": "street",
                  "id.token.claim": "true",
                  "user.attribute.region": "region",
                  "access.token.claim": "true",
                  "user.attribute.locality": "locality"
                }
              }
            ]
          }
        ],
        "defaultDefaultClientScopes": [
          "role_list",
          "profile",
          "email",
          "roles",
          "web-origins"
        ],
        "defaultOptionalClientScopes": [
          "offline_access",
          "address",
          "phone",
          "microprofile-jwt"
        ],
        "browserSecurityHeaders": {
          "contentSecurityPolicyReportOnly": "",
          "xContentTypeOptions": "nosniff",
          "xRobotsTag": "none",
          "xFrameOptions": "SAMEORIGIN",
          "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
          "xXSSProtection": "1; mode=block",
          "strictTransportSecurity": "max-age=31536000; includeSubDomains"
        },
        "smtpServer": {},
        "eventsEnabled": false,
        "eventsListeners": [
          "jboss-logging"
        ],
        "enabledEventTypes": [],
        "adminEventsEnabled": false,
        "adminEventsDetailsEnabled": false,
        "identityProviders": [],
        "identityProviderMappers": [],
        "components": {
          "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
              "id": "9ebc28c8-a2e8-4f15-bbcd-d38981eb0da9",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "a890f5c5-1b96-44f9-94fe-172aa77e9ee4",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "authenticated",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "oidc-usermodel-attribute-mapper",
                  "oidc-sha256-pairwise-sub-mapper",
                  "saml-role-list-mapper",
                  "oidc-address-mapper",
                  "saml-user-property-mapper",
                  "oidc-full-name-mapper",
                  "saml-user-attribute-mapper",
                  "oidc-usermodel-property-mapper"
                ]
              }
            },
            {
              "id": "ea20845a-9841-4036-b804-25ab2a741e5c",
              "name": "Allowed Protocol Mapper Types",
              "providerId": "allowed-protocol-mappers",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allowed-protocol-mapper-types": [
                  "saml-user-attribute-mapper",
                  "oidc-address-mapper",
                  "oidc-usermodel-attribute-mapper",
                  "saml-role-list-mapper",
                  "saml-user-property-mapper",
                  "oidc-full-name-mapper",
                  "oidc-usermodel-property-mapper",
                  "oidc-sha256-pairwise-sub-mapper"
                ]
              }
            },
            {
              "id": "f18d611a-32ef-45c8-b372-b61463d3e66c",
              "name": "Full Scope Disabled",
              "providerId": "scope",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "eb82b1c6-f49d-41c4-a15a-323ee91935f0",
              "name": "Max Clients Limit",
              "providerId": "max-clients",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "max-clients": [
                  "200"
                ]
              }
            },
            {
              "id": "aa75fff9-ecb5-47f2-9db7-8a2c6e5b68cf",
              "name": "Consent Required",
              "providerId": "consent-required",
              "subType": "anonymous",
              "subComponents": {},
              "config": {}
            },
            {
              "id": "32e6835f-5444-43ef-b5ef-983672e000d0",
              "name": "Allowed Client Scopes",
              "providerId": "allowed-client-templates",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "allow-default-scopes": [
                  "true"
                ]
              }
            },
            {
              "id": "47e1e309-c82c-45c2-8107-dd916c2fb557",
              "name": "Trusted Hosts",
              "providerId": "trusted-hosts",
              "subType": "anonymous",
              "subComponents": {},
              "config": {
                "host-sending-registration-request-must-match": [
                  "true"
                ],
                "client-uris-must-match": [
                  "true"
                ]
              }
            }
          ],
          "org.keycloak.keys.KeyProvider": [
            {
              "id": "f872b0f3-0223-4ab4-82d7-4ba80545b3d3",
              "name": "aes-generated",
              "providerId": "aes-generated",
              "subComponents": {},
              "config": {
                "kid": [
                  "addb02cc-898a-47b1-8693-c478c56e43f1"
                ],
                "secret": [
                  "7Dxc1sVrySg1PuLAXbakJw"
                ],
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "97894ee7-5323-4c9a-8eea-742aadd8960b",
              "name": "rsa-enc-generated",
              "providerId": "rsa-enc-generated",
              "subComponents": {},
              "config": {
                "privateKey": [
                  "MIIEpQIBAAKCAQEAifmFViCXu5zyxgh+BooUvbY1sgJupDPeHRDfxSuVnxRsk6xYGui3Qi1qF9rEXIugAPecFADYcHlBgN75FJVb5URITdRWkfB+DCSL0aNsxKr+oG2wBITcYkt4IlAxB8jGV2sTlWPpc/auiHUnxvnXiBwQrmdwM+hqsY6VjW8qtDMwEsjelFRQoubqLfiKZrGt2KPAHpHruj7eMhy4sPE4mttC+ULzqlQgPaf78NKqrMtTuakzu9rbzVtRJyScLOk5x6784Tbz7VF2SAuYrGFN1NdeR1LNpMKiha7p5TVZJyexIqYZ9DhKXEi4O2M2yBJguQSEOppBUSlinEQMHzlNqQIDAQABAoIBAQCGDoZa1HgYtbm8Z+vq9qaIXU12k55ktHCO1SJWNK6/Tdzg7ob8PjgweGeoncpEEPV5exuO4/Nn9KiMShjAww3yiJGn7TPfwEb4DVo8agj4XRvhTDHFckGez6z9yeSZp53uuf7hG55sKbYSp6HqVj3v5TTf/2ipRpzDv8HXFbfsNJJfek0ySfC8pThI/gnUjcQN1D13QC4ekazaRU2rU1y5dEwXL+i1BEaegNmmCJRq0zq8HBe5dV0Fc9z5i5Y4t1ffGZ9+wgCf3DvlbpfDHqLPcEvtezHG0S6qasWkcPcp+tSbiVstWdCl4VyK34dU+d0RadFD94b7/eytxyFB/PYBAoGBAMSb7AhUdgTnBW04jiMJZkRqzPDl8248IjmzD956IVT1eea2NSuav5ridA83PRx914+zDTjqaqIGexOa8GXoWeLxJiXmZrzdmYWHdUB0E9YkcRLxsuhnQEdpFAJ9TUteSJ/Q0zMbYMwT4FWVDcNUYbqi+3ywxnR/bCN0bMGbnSGxAoGBALOnUC+o5kawpes4UjCc5e+ImO5XO0MrnXT99L8hZ0/GLqpjM1kcia762FtF5tItkhS5maHuDxWAgAgafXKaoy5qZajGvFdH86bV3nskUeHViQAhcaX3yM134J3aSHan4V97Wq6p7aU7tiEVur0qxaixtTPNp9JWT419SERRebF5AoGAa+l09OF+4ZP3m4o2Ia7wDc9c60Abi76/vlG0/RSlpN8TaHlL18IZNqbistNL3I6JuVq6gCnSG1pZRVp+ZkDQzUo0+QpsC2/J6st9pMHRfXEFCzPUUdESK9/V1sP1n8+BJw7UTTHSwFCMigzEwBhZh7obNMZGNv0VWqR1aRLDfRECgYEAjBP9NewgASZjeJClpTnxH2AGvnBNyQYM89fAKfdFsrH4WOqYcvcJc+IrKJ/MZj0aFgbRf607HazgJ3FgNyfT7LERKxQqbnOvy3oeyy16mvgAppVtI9ecPnkmLm6w6bPkyqpH/sCIh7mTPSDQRgc/r1VA0G+eVybtSIlS+9H7bSECgYEAiPo+xNsUFCSJnc2LhBwFKvl1AhfCGL5sP2mT47UvFkOzxK+0KWubzBeCw3ejpjnG7cx0g+noczU59+jsmjNJw51pqEH9xIc+mYHSL7EKR72oMcMzl+l1Ey0g7f/SDYHuG04EVGpbLjPmw3Ym0lQkBxHQ36lZZBdJVEI+cK7QFOk="
                ],
                "keyUse": [
                  "ENC"
                ],
                "certificate": [
                  "MIICmzCCAYMCBgGBa3+lGjANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjIwNjE2MDc1MDM2WhcNMzIwNjE2MDc1MjE2WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCJ+YVWIJe7nPLGCH4GihS9tjWyAm6kM94dEN/FK5WfFGyTrFga6LdCLWoX2sRci6AA95wUANhweUGA3vkUlVvlREhN1FaR8H4MJIvRo2zEqv6gbbAEhNxiS3giUDEHyMZXaxOVY+lz9q6IdSfG+deIHBCuZ3Az6GqxjpWNbyq0MzASyN6UVFCi5uot+Ipmsa3Yo8Aekeu6Pt4yHLiw8Tia20L5QvOqVCA9p/vw0qqsy1O5qTO72tvNW1EnJJws6TnHrvzhNvPtUXZIC5isYU3U115HUs2kwqKFrunlNVknJ7Eiphn0OEpcSLg7YzbIEmC5BIQ6mkFRKWKcRAwfOU2pAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIO0bjRHtMPT8BWmlvLP78jARlW6uIqzILWCmg2Blz4l+/3LFnAOMPTxgtj4Zgl7dqJXToUCCOQoHYvOmXJVRiRpRlwJCJPreVVGvvZnkfBJeqR+k1t/gE3FUHdXIku1iU/kUacj6rBcZ6iVU3Wt0Jf7hYiNi+o6tdwMr56mQSGpE+GmnuOChaSb4e5REJNy39vBeQB6/CdGFyrvXY2P7rq4YGcqjN+9f0wnw0xUGb06Wn1R647LmFd6J38W7XPf2/K3hNfF+Ogrf7tQWk5wkuiVXVfk5m/I0ynSK5x361AyfXx4CzB0VQ/DKBF/q+TeW0BeiN4qUDmQqC6O+1fY67g="
                ],
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "RSA-OAEP"
                ]
              }
            },
            {
              "id": "ce9ba160-64ed-41ad-979f-1fc95968f2ac",
              "name": "rsa-generated",
              "providerId": "rsa-generated",
              "subComponents": {},
              "config": {
                "privateKey": [
                  "MIIEpQIBAAKCAQEAngW8et+YcX86kDnSI3mSGVd8kXWWtQHxzF61frfAzF55DXhZ6UKG6IVpmbeb2hIIeXT3hkVdn1kTAinA4yRL3MOaW0++oQYwhp/fGcZsIw1S2gj5tLAN9M2Dna1SDl635pSpFBor7Lpfi9L/HXkk416iIKQ0NoCvQTOQWtu2SUHyKjLF2ge6Cp/30CWdSVJBB7lCrijmNN28dFLygYJp7LmIFG1TaToZWFEk8VQ1ZOtbGEXRlQcNylKVNGOCwfpUTAiv1BoTO/GGe4XN2cTQnPQx/5LRiluGumjMvvbejDIQogId2eb6uVLsQJ3obUZ4ERERmDfLBG8xp7Mlar+phwIDAQABAoIBAQCBoW8G1Vn28UoXendaRqaFR3GW2gGxp1C2OJNmylLM1Es1s57+bWbCZH9GbIrbj6OID13mtgyhZa7kPWBQdTwOdB+x/G8DJVK1fXzFZjLbZlirKGW/xhUM13K67K29wBHYg+dX6EhUQGeVCpfhk7mhE8aoREvY0iPyttwazNZyrOfu6GoanR/kYET7UIK/GInqofSRiVLE9G5kts1niUJ8u7uLAUOCxwmr6UolgHI6QO6i8A//oHZF29MyE0B/RNSGOydzcXlFFjN7aswWvsdk63SHf43kq9E2KBd8aalMtfUs6VqnBU6QGppf9oTwEHvczRrApSvhC0xBOzj8JYJRAoGBAPVy77P42ouy/dvLggCumiX6Ef0Tu/8iBvdtwsCm8lIM2Q/TxSYM2yJJFeEVDz5CqNTX5gZWSbFHlNBWEVQa695bhpUW6c7UpVmZNtyDxBYC3JndZ/wK8hlMPWhF0nnyaeLk5uYaYgpZVGEqYobLw7xR65rVPpCsA8b3fHGxHsa7AoGBAKTQtP5+lXXgGBRc/Zk8JSdowWElwQp4kBITD9ZIvI7joMaKl9xuKH0gTW+ArfQGngWDlmC+6ecuImrabH4pUk6JMJXOywKrgc8IPSyfI4vGyo1ZLxWW6FZr+4AvHtK3+Y7uUi4A+9TuYip3/GhyaRFp3mR6T1iU0j6tjLKkdwmlAoGBALCQRa6JTW1BDSyXcKVc9LZs9ZPAJnSZ3bkP1BESBy7O3zZreF6u0NQRDxQjOhvnh9vUkzvrxoconvxfbYe69gG2hVGqcfa/MVMKzFRE1UGgPWDRzIOavB1GosXntEjVASae0xqjz/Lx36kl/EpLOjq2E24GCEO5+d2fGn4Ok70RAoGAAe8VAJt5o31yquKAc0jaYsD+6+XmgvnxLtUcbXZDCCYxn8LGj2aXgQhdAD7xS5i8R/JIVHBJDFZlPv27IivX9GX1tPxNM4XRqx08ooZng19cxxXR0J4JseHofJOQ+AYCnqO7QSDv04rMihUIWC1ngDXOzz0EK1TrtqKQsRPu9aUCgYEAjgWmqS2iwTinVrJIXs4gFFy2RbErAT9Kfev3FZUr5IQ/UAVD5c6pT4tcP/QbUuiRsW6o7mpkn8Vxti8XmmKcYkjnJXDEhR58365KKv6uWChqRUN2Vo2Uy67Bz8iXsLpr0MqZmuegF1pK4Hep6vsgw6h8U9z1YZKD/BQuGz+XNrA="
                ],
                "keyUse": [
                  "SIG"
                ],
                "certificate": [
                  "MIICmzCCAYMCBgGBa3+fOTANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjIwNjE2MDc1MDM0WhcNMzIwNjE2MDc1MjE0WjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCeBbx635hxfzqQOdIjeZIZV3yRdZa1AfHMXrV+t8DMXnkNeFnpQobohWmZt5vaEgh5dPeGRV2fWRMCKcDjJEvcw5pbT76hBjCGn98ZxmwjDVLaCPm0sA30zYOdrVIOXrfmlKkUGivsul+L0v8deSTjXqIgpDQ2gK9BM5Ba27ZJQfIqMsXaB7oKn/fQJZ1JUkEHuUKuKOY03bx0UvKBgmnsuYgUbVNpOhlYUSTxVDVk61sYRdGVBw3KUpU0Y4LB+lRMCK/UGhM78YZ7hc3ZxNCc9DH/ktGKW4a6aMy+9t6MMhCiAh3Z5vq5UuxAnehtRngRERGYN8sEbzGnsyVqv6mHAgMBAAEwDQYJKoZIhvcNAQELBQADggEBACstgl1CRgRWIRuD7qdX5lp7ceX5EE9VhSDY6w0qE85Al9XGNQN2UfqeBCgKDhaqYj+pTBnqIGAJAMOqN6Dn5chwFZ3FsCf5+EAK5oXmzkw3UitdGtnYruChIWVM20W2nYe6DYESaXE/R4v9NE8u/84L1o/Vsa/SI0XsZ14H+CHFyxvgAqSqRJvd2Uf06cjiAKbTwQN7nsZJxmJNB4HiKeXJfZmTTGF01P5DVNh0tJaj6sHywFbixeQkpH4z/XVKSUwLuBkZXdci5i8jWnGT0cuwk4ndEC3QBlXb1wCkS1sRgLcnHyBguwKydpt/X3ClGle9oG7CJ4aMs1K6BJ3mQ04="
                ],
                "priority": [
                  "100"
                ]
              }
            },
            {
              "id": "4732bda0-a80d-490d-a6cf-0d8cf6950d1b",
              "name": "hmac-generated",
              "providerId": "hmac-generated",
              "subComponents": {},
              "config": {
                "kid": [
                  "d98363dc-2f26-4bac-97f0-b731597d1dcd"
                ],
                "secret": [
                  "04SJGvDqJvGnQTiFBRzwpaM0Tp6N7hnV8TeGo0gH6hNCSFa985HqRr5x0bjPEfE7NmXU9qgwzW7sgzlJpcbr6Q"
                ],
                "priority": [
                  "100"
                ],
                "algorithm": [
                  "HS256"
                ]
              }
            }
          ]
        },
        "internationalizationEnabled": false,
        "supportedLocales": [],
        "authenticationFlows": [
          {
            "id": "77ba2000-b96b-41ed-8899-ca530d74efc8",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-email-verification",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "flowAlias": "Verify Existing Account by Re-authentication",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "c82db573-ba27-4b3f-bb95-f15c68dfda3b",
            "alias": "Authentication Options",
            "description": "Authentication options.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "basic-auth",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "basic-auth-otp",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 30,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "bcb37aa1-5014-47a5-8241-7f545a75f6e6",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "8d5fe191-d5aa-4015-bcbd-aceed662aa9f",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "direct-grant-validate-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "27df8896-6782-496f-a488-00fecdc25fbc",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-otp-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "3fabc42c-e98c-4359-9ac4-40c1ace03c0f",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-confirm-link",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "flowAlias": "Account verification options",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "1b5e565d-38e2-4e1e-a4fd-4086570a043d",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "conditional-user-configured",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "reset-otp",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "c877a155-ff04-4aa0-bbc5-b865a1992576",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "create unique user config",
                "authenticator": "idp-create-user-if-unique",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "flowAlias": "Handle Existing Account",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "b7dc9b74-d2a5-41ac-9b40-b7516a3c1ff3",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "idp-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "flowAlias": "First broker login - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "c8fea778-39a9-495a-87d8-4859594f6bd6",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-cookie",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "auth-spnego",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "identity-provider-redirector",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 25,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "flowAlias": "forms",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "4abe3ecc-8222-43d9-91d9-8a9c08496abf",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "client-secret",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "client-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "client-secret-jwt",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 30,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "client-x509",
                "authenticatorFlow": false,
                "requirement": "ALTERNATIVE",
                "priority": 40,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "f5930f0c-8c25-4ab3-8ce6-61ee1fcd906b",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "direct-grant-validate-username",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "direct-grant-validate-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 30,
                "flowAlias": "Direct Grant - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "faff7137-f026-47b6-9477-81be544b6391",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "docker-http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "c684bf61-327d-4824-8503-50f3ca840f60",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticatorConfig": "review profile config",
                "authenticator": "idp-review-profile",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "flowAlias": "User creation or linking",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "20d57601-c172-4613-9cae-5490b5414d36",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "auth-username-password-form",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 20,
                "flowAlias": "Browser - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "fdd827c2-83b9-46fc-9dc0-a6ca6c539f10",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "no-cookie-redirect",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 20,
                "flowAlias": "Authentication Options",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "a88aa169-6af7-4821-be51-b8634a4a59f2",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-page-form",
                "authenticatorFlow": true,
                "requirement": "REQUIRED",
                "priority": 10,
                "flowAlias": "registration form",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "b4138082-ff7d-4c95-935b-70058c97b00c",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "registration-user-creation",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "registration-profile-action",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 40,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "registration-password-action",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 50,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "registration-recaptcha-action",
                "authenticatorFlow": false,
                "requirement": "DISABLED",
                "priority": 60,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          },
          {
            "id": "ec60e7c1-3532-4cb8-9a0f-4a014dade701",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "reset-credentials-choose-user",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "reset-credential-email",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 20,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticator": "reset-password",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 30,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              },
              {
                "authenticatorFlow": true,
                "requirement": "CONDITIONAL",
                "priority": 40,
                "flowAlias": "Reset - Conditional OTP",
                "userSetupAllowed": false,
                "autheticatorFlow": true
              }
            ]
          },
          {
            "id": "f2a61c99-9615-4f89-a0ec-535c5b1e19be",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
              {
                "authenticator": "http-basic-authenticator",
                "authenticatorFlow": false,
                "requirement": "REQUIRED",
                "priority": 10,
                "userSetupAllowed": false,
                "autheticatorFlow": false
              }
            ]
          }
        ],
        "authenticatorConfig": [
          {
            "id": "3624bb78-d6b5-428c-a2dd-60cf08b3f2de",
            "alias": "create unique user config",
            "config": {
              "require.password.update.after.registration": "false"
            }
          },
          {
            "id": "6744a930-1f22-46d8-a5c8-39f884e9c249",
            "alias": "review profile config",
            "config": {
              "update.profile.on.first.login": "missing"
            }
          }
        ],
        "requiredActions": [
          {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
          },
          {
            "alias": "terms_and_conditions",
            "name": "Terms and Conditions",
            "providerId": "terms_and_conditions",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
          },
          {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
          },
          {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
          },
          {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
          },
          {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
          },
          {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
          }
        ],
        "browserFlow": "browser",
        "registrationFlow": "registration",
        "directGrantFlow": "direct grant",
        "resetCredentialsFlow": "reset credentials",
        "clientAuthenticationFlow": "clients",
        "dockerAuthenticationFlow": "docker auth",
        "attributes": {
          "cibaBackchannelTokenDeliveryMode": "poll",
          "cibaExpiresIn": "120",
          "cibaAuthRequestedUserHint": "login_hint",
          "oauth2DeviceCodeLifespan": "600",
          "clientOfflineSessionMaxLifespan": "0",
          "oauth2DevicePollingInterval": "600",
          "clientSessionIdleTimeout": "0",
          "parRequestUriLifespan": "60",
          "clientSessionMaxLifespan": "0",
          "clientOfflineSessionIdleTimeout": "0",
          "cibaInterval": "5"
        },
        "keycloakVersion": "16.1.0",
        "userManagedAccessAllowed": false,
        "clientProfiles": {
          "profiles": []
        },
        "clientPolicies": {
          "policies": []
        }
      }
    ]
kind: ConfigMap
metadata:
  name: realm-export

